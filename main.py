from aiogram import Bot, Dispatcher, F
from aiogram.types import ContentType
import asyncio
from STT import STT_whisper
from sorted import Sorting
import json
from aiogram.filters.command import Command
from aiogram.types import InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder


with open("tokens.json") as complex_data:
    data = complex_data.read()
    numbers = json.loads(data)

main_token = numbers["main_token"]

help_command = """
–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —è –æ—Ç–ø—Ä–∞–≤–ª—é –≤–∞–º —Ç–µ–∫—Å—Ç –∏–∑ –Ω–µ–≥–æü§Ø
–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:
/help - –∫–æ–º–∞–Ω–¥–∞, –ø–æ–∫–∞–∑—ã–≤–∞—é—â–∞—è —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥
/discription - –∫–æ–º–∞–Ω–¥–∞, –ø–æ–∫–∞–∑—ã–≤–∞—é—â–∞—è –æ–ø–∏—Å–∞–Ω–∏–µ –±–æ—Ç–∞
/save <–ö–∞—Ç–µ–≥–æ—Ä–∏—è> <–ù–∞–∑–≤–∞–Ω–∏–µ> - –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–∞—Ä—Ç–∏–Ω–æ–∫/—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
/savedfiles - –∫–æ–º–∞–Ω–¥–∞, —Å –ø–æ–º–æ—â—å—é –∫–æ—Ç–æ—Ä–æ–π –≤—ã –º–æ–∂–µ—Ç–µ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏—è–º
"""
start_command = """
–ü—Ä–∏–≤–µ—Ç!üëã –Ø –±–æ—Çü§ñ, –∫–æ—Ç–æ—Ä—ã–π —É–º–µ–µ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∞—É–¥–∏–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –ø—Ä–∏—Å—ã–ª–∞—Ç—å –∏—Ö –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µü§Ø. \n
/help - –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥
"""
discription_command = """
–ë–æ—Ç —É–º–µ–µ—Ç –ø–∏—Å–∞—Ç—å —Ç–µ–∫—Å—Ç –∏–∑ –∞—É–¥–∏–æ —Å–æ–æ–±—â–µ–Ω–∏–πü§Ø. –¢–∞–∫–∂–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –Ω—É–∂–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º.
–°–æ–∑–¥–∞—Ç–µ–ª–∏:
@maxkuklavodüôÉ
@Albert_Nosachenkoü§ê
@yourocculticT20üßê
–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å:
@jezvGGüíÄ
"""
savedfiles_command = """
–í—ã–±–µ—Ä–µ—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è, –≤ –∫–æ—Ç–æ—Ä–æ–π —Ö–æ—Ç–∏—Ç–µ –Ω–∞–π—Ç–∏ —Å–≤–æ–∏ —Ñ–∞–π–ª—ã.
"""
categories_message = """
–í—ã–±–µ—Ä–µ—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ö–æ—Ç–∏—Ç–µ –Ω–∞–π—Ç–∏ —Å–≤–æ–∏ —Ñ–∞–π–ª—ã.
"""

# –°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞
bot = Bot(token=main_token)
dp = Dispatcher()


# –ö–æ–º–∞–Ω–¥–∞ /start - –Ω–∞—á–∞–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –±–æ—Ç–æ–º, –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–ø—Ä–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
@dp.message(Command("start"))
async def main(message):
    await message.answer(start_command)


# –ö–æ–º–∞–Ω–¥–∞ /help, –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥
@dp.message(Command("help"))
async def main(message):
    await message.answer(help_command)


# –ö–æ–º–∞–¥–Ω–∞ /discription, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–∑—ã–≤–∞–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ –±–æ—Ç–∞
@dp.message(Command("discription"))
async def main(message):
    await message.answer(discription_command)


# –°–æ–∑–¥–∞–Ω–∏–µ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
sort = Sorting()
slova = []
name = []
categories = []


# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
@dp.message(Command("save"))
async def main(message, command):
    # –ï—Å–ª–∏ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω—ã –Ω–∏–∫–∞–∫–∏–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã, —Ç–æ
    # command.args –±—É–¥–µ—Ç None
    if command.args is None:
        await message.answer("–û—à–∏–±–∫–∞: –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω—ã –∞—Ä–≥—É–º–µ–Ω—Ç—ã")
        return
    # –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–¥–µ–ª–∏—Ç—å –∞—Ä–≥—É–º–µ–Ω—Ç—ã –Ω–∞ –¥–≤–µ —á–∞—Å—Ç–∏ –ø–æ –ø–µ—Ä–≤–æ–º—É –≤—Å—Ç—Ä–µ—á–Ω–æ–º—É –ø—Ä–æ–±–µ–ª—É
    try:
        category, name = command.args.split(" ", maxsplit=1)
    # –ï—Å–ª–∏ –ø–æ–ª—É—á–∏–ª–æ—Å—å –º–µ–Ω—å—à–µ –¥–≤—É—Ö —á–∞—Å—Ç–µ–π, –≤—ã–ª–µ—Ç–∏—Ç ValueError
    except ValueError:
        await message.answer(
            "–û—à–∏–±–∫–∞: –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã. –ü—Ä–∏–º–µ—Ä:\n"
            "/save <–ö–∞—Ç–µ–≥–æ—Ä–∏—è> <–ù–∞–∑–≤–∞–Ω–∏–µ>"
        )
        return
    global sort, categories
    sort.slovar("–î—Ä—É–≥–æ–µ", name, str(message.message_id), str(message.chat.id))
    await message.reply("–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ")


# –í—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
@dp.message(Command("savedfiles"))
async def main(message):
    global sort, slova

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    builder = InlineKeyboardBuilder()

    sort.keyses(slova)
    slova = list(set(slova))

    for i in range(len(slova)):
        builder.add(InlineKeyboardButton(text=slova[i], callback_data="num_" + str(i)))

    # –£–∫–∞–∑—ã–≤–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤ –æ—Ç–≤–µ—Ç–µ
    builder.adjust(3)
    await message.answer(savedfiles_command, reply_markup=builder.as_markup())


# –í–æ–≤–æ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –Ω–∞–∑–≤–∞–Ω–∏–π
@dp.callback_query(F.data.startswith("num_"))
async def callback(callback):
    global sort, slova, name

    action = callback.data.split("_")[1]
    builder = InlineKeyboardBuilder()

    slova = list(set(slova))

    for i in range(len(slova)):
        if action == str(i):
            sort.valueses(name, slova[i])
            name = list(set(name))
            for j in range(len(name)):
                builder.add(
                    InlineKeyboardButton(
                        text=name[j], callback_data="numm_" + str(j) + str(j)
                    )
                )
    builder.adjust(3)
    await callback.message.answer(categories_message, reply_markup=builder.as_markup())


# –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–µ —Ä–∞–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –Ω–∞–∑–≤–∞–Ω–∏—é
@dp.callback_query(F.data.startswith("numm_"))
async def callback(callback):
    global sort, slova, name

    slova = list(set(slova))
    name = list(set(name))

    action = callback.data.split("_")[1]

    for i in range(len(slova)):
        sort.valueses(name, slova[i])
        for j in range(len(name)):
            if action == str(i) * 2:
                chatid = sort.dict[slova[i]][name[j]]["chat"]
                message_id = sort.dict[slova[i]][name[j]]["message"]
            else:
                continue
    await bot.send_message(
        chat_id=chatid, text="–í–æ—Ç –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ", reply_to_message_id=message_id
    )


# –ü–µ—Ä–µ–≤–æ–¥ –∏–∑ –∞—É–¥–∏–æ –≤ —Ç–µ–∫—Å—Ç (STT)
@dp.message(F.content_type == ContentType.VOICE)
async def audio(message):
    # Download audio file
    file_id = await bot.get_file(message.voice.file_id)
    await bot.download_file(file_id.file_path, "audio.ogg")

    # Speech-to-Text convertation
    text = STT_whisper("audio.ogg")

    await message.reply(text)


# –ü–∞—Å—Ö–∞–ª–∫–∞ —Å –ò–≥–æ—Ä–µ–º
@dp.message(F.content_type == ContentType.TEXT)
async def Hello(message):
    if "–∏ —á—ë" in message.text.lower() or "–∏ —á–µ" in message.text.lower():
        await bot.send_sticker(
            message.chat.id,
            sticker="CAACAgIAAxkBAAJtC2WhNs5jRDj39GBrG9LGAUFt0U8sAAIvKgACWTYQSgyguNjuPct4NAQ",
        )


# –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ–≥—Ä–∞–º–º—É –≤ –±–æ—Ç–µ
if __name__ == "__main__":
    asyncio.run(dp.start_polling(bot))
